import { DataSet, LinkSchema } from "./dynamicgraphutils";
import { DynamicGraph } from "./dynamicgraph";
export declare function loadDyson(url: string, callback: (dataset: DataSet) => void): void;
/** Loads a .csv file from the indicated url*/
export declare function loadLinkTable(url: string, callBack: (dataset: DataSet) => void, linkSchema: LinkSchema, delimiter: string, timeFormat?: string): void;
export declare function loadXML(url: string, callBack: (dataset: DataSet) => void): void;
/** Loads a .json file from the indicated url.
 * The json must have a 'nodes/vertices' and a 'links/edge/connections/relations' array.
 */
export declare function loadJson(url: string, callBack: (dataset: DataSet) => void, dataName?: string): void;
export declare function loadJsonList(url: string, callBack: (dataset: DataSet) => void): void;
export declare function loadNCube(url: string, callBack: (dataset: DataSet) => void): void;
export declare function loadPajek(url: string, callBack: (dataset: DataSet) => void): void;
export declare function loadMat(url: string, callBack: (dataset: DataSet) => void): void;
export declare function loadGEDCOM(url: string, callBack: (dataset: DataSet) => void): void;
export declare function loadLinkList(url: string, callBack: (dataset: DataSet) => void): void;
export declare function loadMatrix(url: string, callBack: (dataset: DataSet) => void): void;
/** Returns a csv table representation of this graph. It should be the same as
 * the input table format (fix!)
 * Currently: returns simple list of node index pairs.
 */
export declare function exportCSV(graph: DynamicGraph): string;
/** Downloads a string as file.*/
export declare function downloadText(text: string, filename: string): void;
